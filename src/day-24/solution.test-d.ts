import { test, expectTypeOf } from 'vitest'
import type { Move } from './solution'

test('day-24', () => {
  type Maze0 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎅', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '  ', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]

  // Can't move up.
  expectTypeOf<Move<Maze0, 'up'>>().toEqualTypeOf<Maze0>()

  // But Santa can move down.
  type Maze1 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎅', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '  ', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  expectTypeOf<Move<Maze0, 'down'>>().toEqualTypeOf<Maze1>()

  // Santa can move down again.
  type Maze2 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎅', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '  ', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  expectTypeOf<Move<Maze1, 'down'>>().toEqualTypeOf<Maze2>()

  // Can't move left.
  expectTypeOf<Move<Maze2, 'left'>>().toEqualTypeOf<Maze2>()

  // If Santa moves up, it's back to `Maze1`.
  expectTypeOf<Move<Maze2, 'up'>>().toEqualTypeOf<Maze1>()

  // Can't move right.
  expectTypeOf<Move<Maze2, 'right'>>().toEqualTypeOf<Maze2>()

  // We exhausted all other options. Guess we have got to go down.
  type Maze3 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '🎅', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '  ', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  expectTypeOf<Move<Maze2, 'down'>>().toEqualTypeOf<Maze3>()

  // Maybe we just gotta go down all the time?
  type Maze4 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '  ', '  ', '🎅', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  expectTypeOf<Move<Maze3, 'down'>>().toEqualTypeOf<Maze4>()

  // Let's go left this time just to change it up?
  type Maze5 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '  ', '🎅', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  // It worked!
  expectTypeOf<Move<Maze4, 'left'>>().toEqualTypeOf<Maze5>()

  // Couldn't hurt to try left again?
  type Maze6 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '🎅', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  expectTypeOf<Move<Maze5, 'left'>>().toEqualTypeOf<Maze6>()

  // Three time's a charm?
  // Lol, nope.
  expectTypeOf<Move<Maze6, 'left'>>().toEqualTypeOf<Maze6>()

  // We haven't tried up yet (?)
  type Maze7 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '  ', '🎅', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '  ', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  // NOICE.
  expectTypeOf<Move<Maze6, 'up'>>().toEqualTypeOf<Maze7>()

  // Maybe another left?
  type Maze8 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '🎅', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '  ', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  expectTypeOf<Move<Maze7, 'left'>>().toEqualTypeOf<Maze8>()

  // Haven't tried a right yet... Let's give it a go!
  // Not this time...
  expectTypeOf<Move<Maze8, 'right'>>().toEqualTypeOf<Maze7>()

  // Probably just need to stick with left then.
  type Maze9 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '🎅', '  ', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '  ', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  expectTypeOf<Move<Maze8, 'left'>>().toEqualTypeOf<Maze9>()

  // Why fix what's not broken?
  type Maze10 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '🎅', '  ', '  ', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '  ', '🎄', '🎄', '  ', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  expectTypeOf<Move<Maze9, 'left'>>().toEqualTypeOf<Maze10>()

  // Do you smell cookies?? it's coming from down...
  type Maze11 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['  ', '🎅', '🎄', '🎄', '  ', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  expectTypeOf<Move<Maze10, 'down'>>().toEqualTypeOf<Maze11>()

  // The cookies must be freshly baked.
  // I hope there's also the customary glass of milk!
  type Maze12 = [
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '  ', '  ', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '  ', '🎄'],
    ['🎅', '  ', '🎄', '🎄', '  ', '  ', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '🎄', '🎄', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '  ', '  ', '  ', '  ', '🎄', '  ', '🎄', '🎄', '🎄'],
    ['🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄', '🎄'],
  ]
  expectTypeOf<Move<Maze11, 'left'>>().toEqualTypeOf<Maze12>()

  // COOKIES!!!
  type MazeWin = [
    ['🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪'],
    ['🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪'],
    ['🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪'],
    ['🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪'],
    ['🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪'],
    ['🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪'],
    ['🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪'],
    ['🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪'],
    ['🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪'],
    ['🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪', '🍪'],
  ]
  expectTypeOf<Move<Maze12, 'left'>>().toEqualTypeOf<MazeWin>()
})
